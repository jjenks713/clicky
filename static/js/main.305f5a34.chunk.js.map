{"version":3,"sources":["components/Pics.js","components/Container.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Pictures","props","react_default","a","createElement","className","key","id","onClick","clickImage","style","width","height","borderWidth","alt","src","image","Container","concat","fluid","children","footer","position","bottom","Footer","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","class","App","state","Pics","score","highScore","gameOver","_this","setState","console","log","this","forEach","pic","count","alert","gameWin","find","o","i","sort","Math","random","_this2","display","listStyle","components_Container","marginRight","marginLeft","map","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.305f5a34.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// const picStyle = {\r\n//     width: \"200px\",\r\n//     height: \"200px\",\r\n//     borderWidth\r\n// }\r\n\r\n\r\nfunction Pictures(props) {\r\n    return (\r\n\r\n        <div>\r\n                {/* {props.results.map(result => ( */}\r\n                {/* key={result.id} */}\r\n                    <div className=\"thumbnail float-left mr-4 mb-4 shadow-lg p-3 rounded border border-info\" key={props.id} onClick={() => props.clickImage(props.id)} >\r\n                        <img style={{ width: \"200px\", height: \"200px\", borderWidth: \"10px\" }} alt=\"A Pic\" src={props.image} />\r\n                    </div>\r\n                    \r\n                {/* ))} */}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pictures;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \" mt-5\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\r\nimport { read } from \"fs\";\r\n\r\nconst footer = {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    height: \"75px\",\r\n}\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"text-center\" style={\r\n            {\r\n                backgroundImage: \"url(\" + \"https://hdqwalls.com/download/rick-and-morty-5k-fan-art-by-2048x1152.jpg\" + \")\",\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                position: \"absolute\",\r\n                // bottom: 0,\r\n                width: \"100%\",\r\n                height: \"100px\",\r\n                footer\r\n            }}>\r\n            <h3 class=\"text-white\">Rick and Morty Clicky Game!</h3>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Pictures from './components/Pics';\nimport Pics from \"./pics\";\nimport Container from \"./components/Container\"\nimport Footer from \"./components/Footer\"\n\nclass App extends Component {\n\n  state = {\n    Pics,\n    score: 0,\n    highScore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({ highScore: this.state.score }, function () {\n        console.log(this.state.highScore);\n      });\n    }\n    this.state.Pics.forEach(pic => {\n      pic.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  }\n  gameWin = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({ highScore: this.state.score }, function () {\n        console.log(this.state.highScore);\n      });\n    }\n    this.state.Pics.forEach(pic => {\n      pic.count = 0;\n    });\n      alert(`You Win!!`);\n      this.setState({ score: 0 });\n      return true;\n  }\n\n  clickImage = id => {\n    // alert(\"clicking an image\", id);\n    this.state.Pics.find((o, i) => {\n      if (o.id === id) {\n        if (Pics[i].count === 0) {\n          Pics[i].count = Pics[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            if (this.state.score === 12) {\n              this.gameWin();\n            }\n            console.log(this.state.score);\n          });\n          this.state.Pics.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={\n          {\n            backgroundImage: \"url(\" + \"https://hdqwalls.com/download/rick-and-morty-5k-fan-art-by-2048x1152.jpg\" + \")\",\n            // backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n          }}>\n          <div className=\"text-light\">\n            <div className=\"text-light p-5 row text-left\">\n              <div className=\"col-10\">\n                <h1>Clicky Game!</h1><br></br>\n                <h2>Click a picture to start, don't click the same one twice</h2>\n              </div>\n              <div className=\"col-2\">\n                <h2 className=\"text-right\"><ul style={{ display: \"inline\", listStyle: \"none\" }}>\n                  <li>Top Score: {this.state.highScore}</li>\n                  <li>Score: {this.state.score}</li>\n                </ul></h2>\n              </div>\n            </div>\n          </div>\n        </div><br></br><br></br>\n        <Container>\n          <div className=\"row text-center\" style={{ marginRight: \"auto\", marginLeft: \"auto\" }}>\n            <div className=\"col-lg-12\">\n              {\n                this.state.Pics.map((pic) => (\n                  <Pictures\n                    clickImage={this.clickImage}\n                    id={pic.id}\n                    key={pic.id}\n                    image={pic.image} />)\n                )}\n            </div>\n          </div><br></br><br></br>\n        </Container>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}